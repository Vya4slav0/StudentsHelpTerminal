<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:TerminalCustomControls;assembly=TerminalCustomControls"
                    xmlns:conv="clr-namespace:BindingConverters;assembly=BindingConverters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--#region Blue TextBlocks styles-->
    <Style x:Key="TextBlocks" TargetType="TextBlock">
        <Setter Property="Foreground" Value="DarkBlue"/>
        <Setter Property="FontFamily" Value="Cascadia"/>
    </Style>

    <Style x:Key="TextBlockBig" BasedOn="{StaticResource TextBlocks}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextBlockMedium" BasedOn="{StaticResource TextBlocks}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="TextBlockSmall" BasedOn="{StaticResource TextBlocks}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <!--#endregion-->

    <!--#region Blue border style and gradient-->
    <LinearGradientBrush x:Key="BlueLinearGradient" StartPoint="0 0" EndPoint="1 1">
        <GradientStop Color="DeepSkyBlue" Offset="0"/>
        <GradientStop Color="DarkBlue" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="SemiOpacityBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BlueLinearGradient}"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="AliceBlue" Opacity="0.7"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="5"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="BorderBrush.RenderTransform">

                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Custom buttons' style-->
    <conv:DivideByConverter x:Key="DivideByConverter"/>

    <Style TargetType="custom:ButtonCuttedCorners">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="AliceBlue" Opacity="0.7"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource BlueLinearGradient}"/>
        <Setter Property="ClickColor" Value="{StaticResource ColorClick}"/>
        <Setter Property="TextColor" Value="{StaticResource BrushDark}"/>
        <Setter Property="FontFamily" Value="Cascadia"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight, Converter={StaticResource DivideByConverter}, ConverterParameter=2}"/>
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--Skew angle for all elements-->
    <sys:Double x:Key="SkewAngle">-20</sys:Double>

    <!--#region Scroll bars style-->
    <!--Two buttons at the ends of bar-->
    <Style x:Key="ScrollBarEndsButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Style="{StaticResource SemiOpacityBorder}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="DeepSkyBlue" Opacity="0.7"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Buttons on the bar-->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Thumb-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Style="{StaticResource SemiOpacityBorder}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Templates for vertical and horizontal bars-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Width="20" Background="Transparent">

            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>

            <RepeatButton Grid.Row="0"
                          Command="ScrollBar.LineUpCommand"
                          Style="{StaticResource ScrollBarEndsButtons}">
                <RepeatButton.RenderTransform>
                    <SkewTransform AngleY="{StaticResource SkewAngle}"/>
                </RepeatButton.RenderTransform>
            </RepeatButton>

            <Track Grid.Row="1" 
                   Name="PART_Track"
                   IsDirectionReversed="True">

                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>

                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}">
                        <Thumb.RenderTransform>
                            <SkewTransform AngleY="{StaticResource SkewAngle}"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>

                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>

            </Track>

            <RepeatButton Grid.Row="2"
                          Command="ScrollBar.LineDownCommand"
                          Style="{StaticResource ScrollBarEndsButtons}">
                <RepeatButton.RenderTransform>
                    <SkewTransform AngleY="{StaticResource SkewAngle}"/>
                </RepeatButton.RenderTransform>
            </RepeatButton>

        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Height="20" Background="Transparent">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>

            <RepeatButton Grid.Column="0"
                          Command="ScrollBar.LineLeftCommand"
                          Style="{StaticResource ScrollBarEndsButtons}">
                <RepeatButton.RenderTransform>
                    <SkewTransform AngleX="{StaticResource SkewAngle}"/>
                </RepeatButton.RenderTransform>
            </RepeatButton>

            <Track Grid.Column="1" 
                   Name="PART_Track"
                   IsDirectionReversed="False">

                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand"/>
                </Track.DecreaseRepeatButton>

                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}">
                        <Thumb.RenderTransform>
                            <SkewTransform AngleX="{StaticResource SkewAngle}"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>

                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand"/>
                </Track.IncreaseRepeatButton>

            </Track>

            <RepeatButton Grid.Column="2"
                          Command="ScrollBar.LineRightCommand"
                          Style="{StaticResource ScrollBarEndsButtons}">
                <RepeatButton.RenderTransform>
                    <SkewTransform AngleX="{StaticResource SkewAngle}"/>
                </RepeatButton.RenderTransform>
            </RepeatButton>

        </Grid>
    </ControlTemplate>

    <!-- Style for overall  ScrollBar -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Template" 
						Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" 
						Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Scroll viewer style-->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Orientation="Vertical"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Orientation="Horizontal"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Slider style-->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Style="{StaticResource SemiOpacityBorder}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderTickBarStyle" TargetType="{x:Type TickBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Fill">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ColorDark}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TickBar x:Name="TopTick"
                     Grid.Row="0"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Top"
                     Height="4"/>

            <Border x:Name="TrackBackground"
                    Margin="0"
                    CornerRadius="2"
                    Height="4"
                    Grid.Row="1"
                    Style="{StaticResource SemiOpacityBorder}"
                    BorderThickness="1"/>
            
            <Track Grid.Row="1"
                   x:Name="PART_Track">
                
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" >
                        <Thumb.RenderTransform>
                            <SkewTransform CenterX="0.5" CenterY="0.5"
                                           AngleY="{StaticResource SkewAngle}"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
                
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
                
            </Track>
            
            <TickBar x:Name="BottomTick"  
                     Grid.Row="2"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Bottom"
                     Height="4"/>
            
        </Grid>
        
        <ControlTemplate.Triggers>
            
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <TickBar x:Name="LeftTick"
                     Grid.Column="0"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Left"
                     Width="4"/>

            <Border x:Name="TrackBackground"
                    Margin="0"
                    CornerRadius="2"
                    Width="4"
                    Grid.Column="1"
                    Style="{StaticResource SemiOpacityBorder}"
                    BorderThickness="1"/>
            
            <Track Grid.Column="1"
                   x:Name="PART_Track">
                
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}">
                        <Thumb.RenderTransform>
                            <SkewTransform CenterX="0.5" CenterY="0.5"
                                           AngleX="{StaticResource SkewAngle}"/>
                        </Thumb.RenderTransform>
                    </Thumb>
                </Track.Thumb>
                
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
                
            </Track>

            <TickBar x:Name="RightTick"
                     Grid.Column="2"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Right"
                     Width="4"/>
            
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="LeftTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="RightTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="LeftTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="RightTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
            
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>